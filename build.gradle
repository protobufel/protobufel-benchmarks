buildscript {
    repositories {
        jcenter()
        mavenCentral()
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

plugins {
    id 'java-library'
    id 'maven'
    id 'signing'

    id 'io.codearte.nexus-staging' version '0.9.0'
    id 'net.researchgate.release' version '2.6.0'

    //id 'eclipse'
    id "me.champeau.gradle.jmh" version "0.4.3"

    id 'jacoco'
    id 'build-dashboard'

    id 'nebula.gradle-git-scm' version '3.0.1'
}

repositories {
    jcenter()
    mavenCentral()
}

//plugins.withType(EclipsePlugin) {
//  project.eclipse.classpath.plusConfigurations += [ configurations.jmh ]
//}

group = 'com.github.protobufel'
archivesBaseName = 'protobufel-benchmarks'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    jmh 'com.github.protobufel:protobufel:0.7.2'
    jmh 'com.github.protobufel:protobufel-test-util:0.7.0'
}

//reporting {
//    baseDir "$buildDir/docs"
//}

jmh {
    jmhVersion = '1.19' // Specifies JMH version
    includeTests = false
    // Allows to include test sources into generate JMH jar, i.e. use it when benchmarks depend on the test classes.
    duplicateClassesStrategy = 'FAIL'
    // Strategy to apply when encountring duplicate classes during creation of the fat jar (i.e. while executing jmhJar task)
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

task copyJMHReportToDoc(type: Sync, group: 'documentation') {
    from "$buildDir/reports/jmh/results.txt"
    into("docs/jmh")

    doLast {
        scmFactory.create().commit('added JMH report', "docs/jmh")
        //grgit.push()
    }
}

release {
    preCommitText = ''
    preTagCommitMessage = 'pre tag commit: '
    tagCommitMessage = 'bumped to '
    newVersionCommitMessage = 'new version commit: '
//        tagTemplate = "${version}"
}

preTagCommit.dependsOn 'copyJMHReportToDoc'
afterReleaseBuild.dependsOn 'jmh'